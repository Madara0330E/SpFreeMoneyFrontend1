"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/spwmini";
exports.ids = ["vendor-chunks/spwmini"];
exports.modules = {

/***/ "(ssr)/./node_modules/spwmini/dist/client.mjs":
/*!**********************************************!*\
  !*** ./node_modules/spwmini/dist/client.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SPWMini)\n/* harmony export */ });\n// src/emitter/index.js\nfunction Emitter(obj) {\n    if (obj) return mixin(obj);\n}\nfunction mixin(obj) {\n    for(var key in Emitter.prototype){\n        obj[key] = Emitter.prototype[key];\n    }\n    return obj;\n}\nEmitter.prototype.on = Emitter.prototype.addEventListener = function(event, fn) {\n    this._callbacks = this._callbacks || {};\n    (this._callbacks[\"$\" + event] = this._callbacks[\"$\" + event] || []).push(fn);\n    return this;\n};\nEmitter.prototype.once = function(event, fn) {\n    function on() {\n        this.off(event, on);\n        fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.on(event, on);\n    return this;\n};\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function(event, fn) {\n    this._callbacks = this._callbacks || {};\n    if (0 == arguments.length) {\n        this._callbacks = {};\n        return this;\n    }\n    var callbacks = this._callbacks[\"$\" + event];\n    if (!callbacks) return this;\n    if (1 == arguments.length) {\n        delete this._callbacks[\"$\" + event];\n        return this;\n    }\n    var cb;\n    for(var i = 0; i < callbacks.length; i++){\n        cb = callbacks[i];\n        if (cb === fn || cb.fn === fn) {\n            callbacks.splice(i, 1);\n            break;\n        }\n    }\n    if (callbacks.length === 0) {\n        delete this._callbacks[\"$\" + event];\n    }\n    return this;\n};\nEmitter.prototype.emit = function(event) {\n    this._callbacks = this._callbacks || {};\n    var args = new Array(arguments.length - 1), callbacks = this._callbacks[\"$\" + event];\n    for(var i = 1; i < arguments.length; i++){\n        args[i - 1] = arguments[i];\n    }\n    if (callbacks) {\n        callbacks = callbacks.slice(0);\n        for(var i = 0, len = callbacks.length; i < len; ++i){\n            callbacks[i].apply(this, args);\n        }\n    }\n    return this;\n};\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\nEmitter.prototype.listeners = function(event) {\n    this._callbacks = this._callbacks || {};\n    return this._callbacks[\"$\" + event] || [];\n};\nEmitter.prototype.hasListeners = function(event) {\n    return !!this.listeners(event).length;\n};\n// src/client.ts\nvar SPWMini = class extends Emitter {\n    #send(type, payload) {\n        if (payload) return window.parent.postMessage({\n            type,\n            payload\n        }, \"*\");\n        return window.parent.postMessage({\n            type\n        }, \"*\");\n    }\n    #handleMessage({ data }) {\n        if (!data || typeof data !== \"object\") return;\n        if (!data.type) return;\n        this.emit(data.type, data.payload);\n    }\n    constructor(appId, options){\n        super();\n        this.isReady = false;\n        this.user = null;\n        this.customFetch = null;\n        this.appId = appId;\n        if (options?.customFetch) this.customFetch = options.customFetch;\n        const doAutoInit = !options || options.autoinit !== false;\n        if (doAutoInit) this.initialize();\n        this.once(\"initResponse\", (user)=>{\n            this.isReady = true;\n            this.user = user;\n            if (this.isReady) this.emit(\"ready\");\n        });\n    }\n    initialize() {\n        window.addEventListener(\"message\", this.#handleMessage.bind(this));\n        this.#send(\"init\", this.appId);\n    }\n    validateUser(url, init = {}) {\n        return new Promise((resolve, reject)=>{\n            if (!init.method) init.method = \"POST\";\n            if (!init.headers) init.headers = {};\n            init.headers[\"Content-Type\"] = \"application/json\";\n            const fetchFunction = this.customFetch || window.fetch;\n            fetchFunction(url, {\n                ...init,\n                body: JSON.stringify(this.user)\n            }).then((r)=>r.text()).then((v)=>resolve(v === \"1\")).catch(reject);\n        });\n    }\n    dispose() {\n        window.removeEventListener(\"message\", this.#handleMessage.bind(this));\n    }\n    openURL(url) {\n        let parsedUrl;\n        try {\n            parsedUrl = new URL(url);\n        } catch (e) {\n            throw \"Невалидный URL\";\n        }\n        if (parsedUrl.protocol !== \"https:\") throw \"Неверный протокол\";\n        this.#send(\"openURL\", url);\n    }\n    openPayment(code) {\n        if (!code) throw \"Не указан код\";\n        this.#send(\"openPayment\", code);\n    }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/spwmini/dist/client.mjs\n");

/***/ })

};
;